<launch>
  <!-- Arguments -->
  <arg name="model" default="$(optenv TURTLEBOT3_MODEL burger3)" doc="model type [burger, waffle, waffle_pi]"/>
  
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="set_base_frame" default="base_footprint"/>
  <arg name="set_odom_frame" default="odom"/>
  <arg name="set_map_frame"  default="map"/>
  <arg name="x_pos" default="-1.6"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <!-- Gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
    <param name="base_frame" value="$(arg set_base_frame)"/>
    <param name="odom_frame" value="$(arg set_odom_frame)"/>
    <param name="map_frame"  value="$(arg set_map_frame)"/>
    <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />

  </node>

  <!-- Loading gazebo world with huma-->
  <arg name="world"  default="tutorial_office"/>  <!-- empty, ... (see ../worlds) -->
  <!--deprecated argument, you should specify the parameters below-->
  <!-- They are described in tiago.urdf.xacro -->
  <arg name="robot"  default="titanium"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>
  <arg name="multi" default=""/>
  <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="gui" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="public_sim" default="false"/>
  <arg name="tuck_arm" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="use_moveit_camera" default="false"/>
  <arg name="use_dynamic_footprint" default="false"/>

  <env name="LC_NUMERIC" value="C" />

  <!-- start up world -->
  <include file="$(find pal_gazebo_worlds)/launch/pal_gazebo.launch">
    <arg name="world" value="$(arg world)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="recording" value="$(arg recording)"/>
    <arg name="extra_gz_model_path" value="$(find tiago_gazebo)/models"/>
    <arg name="extra_gz_resource_path" value="$(find tiago_gazebo)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

  

  <!-- USING SIMULATION TIME , ARGUMENT GOES INTO PARAMETER SERVER -->
  <param name="/use_sim_time" value="true" />

  <!-- Gazebo spawning -->
  <param name="robot_description" command="$(find xacro)/xacro.py --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

   <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <!-- Launching RViz files-->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot3_slam)/rviz/turtlebot3_gmapping.rviz" />

  <!-- Arguments -->
  <arg name="HOME" default="$(optenv HOME)"/>

  <!-- Recording rosbag data  -->
  <node pkg="rosbag" type="record" name="rosbag_record_diag"
       args="record -o $(arg HOME)/MicronUVGIRobot/Recorded/ /map"/> 

</launch>
